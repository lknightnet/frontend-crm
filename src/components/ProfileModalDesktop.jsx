import {useState, useEffect, useRef} from 'react';
import {useAuth} from "../context/AuthContext";
import "./styles/ProfileModal.css"

const ProfileModalDesktop = ({onClose}) => {
    const {authFetch, user} = useAuth();
    const [initialName, setInitialName] = useState('');
    const [initialEmail, setInitialEmail] = useState('');

    const [initialCreatedAt, setInitialCreatedAt] = useState('');
    const [initialLastLogin, setInitialLastLogin] = useState('');

    const [name, setName] = useState('');
    const [email, setEmail] = useState('');


    const [createdAt, setCreatedAt] = useState('');
    const [lastLogin, setLastLogin] = useState('');


    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);

    useEffect(() => {
        const handleResize = () => {
            setIsMobile(window.innerWidth <= 768);
        };

        window.addEventListener('resize', handleResize);
        return () => window.removeEventListener('resize', handleResize);
    }, []);
    const avatarSrc = isMobile
        ? require('../assets/Icon.png')
        : require('../assets/Icon@1x.png');
    const handleSaveProfileTask = async () => {
        const taskData = {
            name: name || null,   // —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ *string
            email: email || null, // —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ *string
        };

        console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è:', taskData);

        try {
            const response = await authFetch('http://gustav.website:8010/api/user/update', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify(taskData),
            });

            if (response.ok) {
                window.location.reload(); // üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            } else {
                const errorData = await response.json();
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', errorData);
            }
        } catch (error) {
            console.error('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:', error);
        }
    };

    useEffect(() => {
        if (user) {
            const nameVal = user.name || '';
            const emailVal = user.email || '';
            const lastLoginRaw = user.last_login || '';
            const createdAtRaw = user.created_at || '';

            const formatDate = (dateStr: string) => {
                const date = new Date(dateStr);
                return date.toLocaleString('ru-RU', {
                    year: 'numeric',
                    month: '2-digit',
                    day: '2-digit',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit',
                }).replace(',', '');
            };

            const lastLoginVal = lastLoginRaw ? formatDate(lastLoginRaw) : '';
            const createdAtVal = createdAtRaw ? formatDate(createdAtRaw) : '';

            setInitialName(nameVal);
            setInitialEmail(emailVal);

            setInitialLastLogin(lastLoginVal);
            setInitialCreatedAt(createdAtVal);

            setName(nameVal);
            setEmail(emailVal);

            setLastLogin(lastLoginVal);
            setCreatedAt(createdAtVal);
        }
    }, [user]);

    const isChanged = name !== initialName || email !== initialEmail;

    return (
        <div className="modal-overlay-profile" onClick={onClose}>
            <div className="modal-profile-content" onClick={(e) => e.stopPropagation()}>
                <button className="close-button-profile" onClick={onClose}>–ó–∞–∫—Ä—ã—Ç—å</button>
                <p className="modal-title-profile">
                    –ü—Ä–æ—Ñ–∏–ª—å
                </p>

                <img src={avatarSrc} alt="–ê–≤–∞—Ç–∞—Ä" className="profile-avatar"/>

                <div className="profile-extra-rectangle">
                    <p className="title-profile">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</p>

                    <div className="profile-field">
                        <label htmlFor="name">–ò–º—è</label>
                        <input
                            type="text"
                            id="name"
                            value={name}
                            onChange={(e) => setName(e.target.value)}
                        />
                    </div>

                    <div className="profile-field">
                        <label htmlFor="email">Email</label>
                        <input
                            type="email"
                            id="email"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                        />
                    </div>
                    <div className="profile-field">
                        <label htmlFor="last_login">–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞</label>
                        <input
                            type="text"
                            id="last_login"
                            value={lastLogin}
                            disabled={true}
                        />
                    </div>
                    <div className="profile-field">
                        <label htmlFor="created_at">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞</label>
                        <input
                            type="text"
                            id="created_at"
                            value={createdAt}
                            disabled={true}
                        />
                    </div>
                </div>

                <div style={{display: 'flex', justifyContent: 'flex-end', marginTop: '1.5rem'}}>
                    <button
                        className="edit-profile-button"
                        onClick={handleSaveProfileTask}
                        disabled={!isChanged}  // –∫–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω
                        style={{
                            cursor: !isChanged ? 'not-allowed' : 'pointer',
                            opacity: !isChanged ? 0.5 : 1,
                        }}
                    >
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                    </button>
                </div>
            </div>
        </div>
    );
};

export default ProfileModalDesktop;